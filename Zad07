// SO2 IS1 211A LAB07
// Patryk Siemiński
// psieminski@wi.zut.edu.pl

#include <stdio.h> 
#include <stdlib.h>
#include <pthread.h>

pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;

int found = 0;

struct infoForThread
{
	int chNumber;
	char lookFor;
	char* lookIn;
};

void* count(void *info)
{
	struct infoForThread* myInfo = (struct infoForThread*)info;
	int i = 0;
	for(i = 0; i <myInfo->chNumber; i++)
	{
		if(myInfo->lookIn[i] == myInfo->lookFor)
		{
			pthread_mutex_lock(&mutex);
			found++;
			pthread_mutex_unlock(&mutex);
		}
	}
	
	return;
}

int threads;
int* chPerThread;
int tmp = 0;
char lookForIt;
char* fileName;
char** stringForThread;
pthread_t* createdThreads;

int main(int argc, char** argv) {

	if (argc<4)
	{
		printf("Nie podano odpowiedniej ilosci parametrow.\n");
		exit(0);
	}
	else
	{
		fileName=argv[1];
		lookForIt=argv[2][0];
		threads=atoi(argv[3]);
	}
	printf("Zostanie utworzonych %d watkow szukajacych litery %c w pliku o nazwie %s\n",threads,lookForIt,fileName);

	FILE * pFile;
	int lSize;
	char * buffer;
	size_t result;

	pFile = fopen ( fileName , "rb" );
	if (pFile==NULL) {printf("Couldn't open file %s\n",fileName); exit (1);}

	fseek (pFile , 0 , SEEK_END);
	lSize = ftell (pFile);
	rewind (pFile);

	tmp = lSize;
	chPerThread = malloc (sizeof(int)*threads);

	int currentThread = 0;
	while(tmp>0)
	{
		chPerThread[currentThread]++;
		if (++currentThread==threads) currentThread=0;
		tmp--;
	}

	struct infoForThread* threadArgs = (struct infoForThread*)malloc (sizeof(struct infoForThread)*threads);

	int i = 0;
	for (i=0; i<threads; i++)
	{
		threadArgs[i].lookFor=lookForIt;
		threadArgs[i].chNumber=chPerThread[i];
		threadArgs[i].lookIn = malloc (sizeof(char)*chPerThread[i]);
		fread(threadArgs[i].lookIn,1,chPerThread[i],pFile);
	}

	createdThreads=malloc(sizeof(pthread_t)*threads);

	for(i=0; i<threads; i++)
	{
		if(pthread_create(&createdThreads[i], NULL, count, &threadArgs[i]))
		{
			printf("Błąd podczas tworzenia wątku %d!\n", i);
			abort();
		}
	}

	for(i = 0; i < threads; i++)
	{
		if(pthread_join(createdThreads[i], NULL))
		{
			printf("Błąd podczas łączenia wątku %d!\n", i);
			abort();
		}
	}

	printf("W pliku wystapilo %d znakow %c.\n",found,lookForIt);

	return (0);

}

